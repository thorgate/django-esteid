!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Esteid=e():t.Esteid=e()}(window,(function(){return function(t){var e={};function i(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,i),a.l=!0,a.exports}return i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)i.d(n,a,function(e){return t[e]}.bind(null,a));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);const n=["EST","ENG","RUS","LIT"],a={user_cancel:{EST:"Allkirjastamine katkestati",ENG:"Signing was cancelled",LIT:"Pasirašymas nutrauktas",RUS:"Подпись была отменена"},no_certificates:{EST:"Sertifikaate ei leitud",ENG:"Certificate not found",LIT:"Nerastas sertifikatas",RUS:"Сертификат не найден"},invalid_argument:{EST:"Vigane sertifikaadi identifikaator",ENG:"Invalid certificate identifier",LIT:"Neteisingas sertifikato identifikatorius",RUS:"Неверный идентификатор сертификата"},no_implementation:{EST:"Vajalik tarkvara on puudu",ENG:"Unable to find software",LIT:"Nerasta programinės įranga",RUS:"Отсутствует необходимое программное обеспечение"},technical_error:{EST:"Tehniline viga",ENG:"Technical error",LIT:"Techninė klaida",RUS:"Техническая ошибка"},not_allowed:{EST:"Veebis allkirjastamise käivitamine on võimalik vaid https aadressilt",ENG:"Web signing is allowed only from https:// URL",LIT:"Web signing is allowed only from https:// URL",RUS:"Подпись в интернете возможна только с URL-ов, начинающихся с https://"}};var r=class{constructor(t){this.language=t||"EST",this.certificate=null}initializeIdCard(){return new Promise((function(t,e){window.hwcrypto.use("auto")?t():e("Backend selection failed")}))}getCertificate(){return new Promise((t,e)=>{const i={lang:this.language};window.hwcrypto.getCertificate(i).then(e=>{this.certificate=e,t(e.hex)},t=>{e(t)})})}signHexData(t){return new Promise((e,i)=>{const n={lang:this.language};window.hwcrypto.sign(this.certificate,{type:"SHA-256",hex:t},n).then(t=>{e(t.hex)},t=>{i(t)})})}get language(){return this._language}set language(t){-1!==n.indexOf(t)&&(this._language=t)}getError(t){return void 0===a[t]&&(t="technical_error"),{error_code:t,message:a[t][this.language]}}};async function s(t,e){const i=Object.entries(e).map(([t,e])=>`${encodeURIComponent(t)}=${encodeURIComponent(e)}`).join("&");try{const e=await fetch(t,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:i});return{data:await e.json(),ok:e.ok}}catch(t){return console.log(t),{}}}class o{constructor(t){const e={language:null,idEndpoints:{start:null,finish:null,finalize:null},midEndpoints:{start:null,status:null,finalize:null},smartidEndpoints:{start:null,status:null,finalize:null},...t};this.idCardManager=new r(e.language),this.idEndpoints=e.idEndpoints,this.midEndpoints=e.midEndpoints,this.smartidEndpoints=e.smartidEndpoints}checkStatus(t,e,i,n){const a=()=>{s(t,e).then(({ok:t,data:e})=>{t&&e.pending?setTimeout(()=>a(),1e3):t&&e.success?i(e):n(e)})};return a}signWithIdCard(t){return new Promise((e,i)=>{this.__signHandleId(t,e,i)})}signWithMobileId(t){return new Promise((e,i)=>{this.__signHandleMid(t,e,i)})}signWithSmartId(t){return new Promise((e,i)=>{this.__signHandleSmartid(t,e,i)})}sign(t,e){if(t===o.SIGN_ID)return this.signWithIdCard(e);if(t===o.SIGN_MOBILE)return this.signWithMobileId(e);if(t===o.SIGN_SMARTID)return this.signWithSmartId(e);throw new TypeError("IdentificationManager: Bad signType")}__signHandleId(t,e,i){this.idCardManager.initializeIdCard().then(()=>{this.idCardManager.getCertificate().then(n=>{s(this.idEndpoints.start,{...t,certificate:n}).then(({ok:n,data:a})=>{n&&a.success?this.__doSign(a.digest,t,e,i):i(a)})},i)},i)}__doSign(t,e,i,n){this.idCardManager.signHexData(t).then(t=>{s(this.idEndpoints.finish,{...e,signature_value:t}).then(({ok:t,data:e})=>{t&&e.success?i(e):n(e)})},n)}__signHandleMid(t,e,i){s(this.midEndpoints.start,t).then(({ok:t,data:n})=>{t&&n.success?e(n):i(n)})}midStatus(t){return new Promise((e,i)=>{this.checkStatus(this.midEndpoints.status,t,e,i)()})}__signHandleSmartid(t,e,i){s(this.smartidEndpoints.start,t).then(({ok:t,data:n})=>{t&&n.success?e(n):i(n)})}smartidStatus(t){return new Promise((e,i)=>{this.checkStatus(this.smartidEndpoints.status,t,e,i)()})}getError(t){return this.idCardManager.getError(t)}}o.SIGN_ID="id",o.SIGN_MOBILE="mid",o.SIGN_SMARTID="smartid";var d={IdentificationManager:o,Languages:{ET:"EST",EN:"ENG",RU:"RUS",LT:"LIT"}};e.default=d}]).default}));