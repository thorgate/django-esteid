!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Esteid=t():e.Esteid=t()}(window,(function(){return function(e){var t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);const n=["EST","ENG","RUS","LIT"],r={user_cancel:{EST:"Allkirjastamine katkestati",ENG:"Signing was cancelled",LIT:"Pasirašymas nutrauktas",RUS:"Подпись была отменена"},no_certificates:{EST:"Sertifikaate ei leitud",ENG:"Certificate not found",LIT:"Nerastas sertifikatas",RUS:"Сертификат не найден"},invalid_argument:{EST:"Vigane sertifikaadi identifikaator",ENG:"Invalid certificate identifier",LIT:"Neteisingas sertifikato identifikatorius",RUS:"Неверный идентификатор сертификата"},no_implementation:{EST:"Vajalik tarkvara on puudu",ENG:"Unable to find software",LIT:"Nerasta programinės įranga",RUS:"Отсутствует необходимое программное обеспечение"},technical_error:{EST:"Tehniline viga",ENG:"Technical error",LIT:"Techninė klaida",RUS:"Техническая ошибка"},not_allowed:{EST:"Veebis allkirjastamise käivitamine on võimalik vaid https aadressilt",ENG:"Web signing is allowed only from https:// URL",LIT:"Web signing is allowed only from https:// URL",RUS:"Подпись в интернете возможна только с URL-ов, начинающихся с https://"}};var a=class{constructor(e){this.language=e||"EST",this.certificate=null}initializeIdCard(){return new Promise((function(e,t){window.hwcrypto.use("auto")?e():t("Backend selection failed")}))}getCertificate(){return new Promise((e,t)=>{const i={lang:this.language};window.hwcrypto.getCertificate(i).then(t=>{this.certificate=t,e(t.hex)},e=>{t(e)})})}signHexData(e){return new Promise((t,i)=>{const n={lang:this.language};window.hwcrypto.sign(this.certificate,{type:"SHA-256",hex:e},n).then(e=>{t(e.hex)},e=>{i(e)})})}get language(){return this._language}set language(e){-1!==n.indexOf(e)&&(this._language=e)}getError(e){return void 0===r[e]&&(e="technical_error"),{error_code:e,message:r[e][this.language]}}};async function s(e,t,i="POST"){try{const n=await fetch(e,{method:i,headers:{"Content-Type":"application/json"},body:"GET"===i?null:JSON.stringify(t||{})}),r=await n.text();try{const e=JSON.parse(r);return e.success="success"===e.status,e.pending=""+n.status=="202",{data:e,ok:n.ok}}catch(e){return console.log("Failed to parse response as JSON",r),{}}}catch(e){return console.log(e),{}}}var o={IdentificationManager:class{constructor({language:e,idUrl:t,mobileIdUrl:i,smartIdUrl:n,csrfToken:r,pollInterval:s}){this.idCardManager=new a(e),this.idUrl=t,this.mobileIdUrl=i,this.smartIdUrl=n,this.csrfToken=r,this.language=e,this.pollInterval=s||3e3}checkStatus(e,t,i){const n=this.pollInterval;console.log("Status",e);const r=()=>{s(e,null,"PATCH").then(({ok:e,data:a})=>{e&&a.pending?setTimeout(()=>r(),n):e&&a.success?t(a):i(a)}).catch(e=>{console.log("Status error",e)})};return r()}signWithIdCard(){return new Promise((e,t)=>{this.__signHandleIdCard(e,t)})}signWithMobileId({idCode:e,phoneNumber:t}){return new Promise((i,n)=>{this.__signHandleMid(e,t,i,n)})}signWithSmartId({idCode:e,country:t}){return new Promise((i,n)=>{this.__signHandleSmartid(e,t,i,n)})}__signHandleIdCard(e,t){this.idCardManager.initializeIdCard().then(()=>{this.idCardManager.getCertificate().then(i=>{s(this.idUrl,{csrfmiddlewaretoken:this.csrfToken,certificate:i}).then(({ok:i,data:n})=>{i&&n.success?this.__doSign(n.digest,e,t):t(n)})},t)},t)}__doSign(e,t,i){this.idCardManager.signHexData(e).then(e=>{s(this.idUrl,{csrfmiddlewaretoken:this.csrfToken,signature_value:e},"PATCH").then(({ok:e,data:n})=>{e&&n.success?t(n):i(n)})},i)}__signHandleMid(e,t,i,n){s(this.mobileIdUrl,{id_code:e,phone_number:t,language:this.language,csrfmiddlewaretoken:this.csrfToken}).then(({ok:e,data:t})=>{e&&t.success?i(t):n(t)})}midStatus(){return new Promise((e,t)=>{this.checkStatus(this.mobileIdUrl,e,t)})}__signHandleSmartid(e,t,i,n){s(this.smartIdUrl,{id_code:e,country:t,csrfmiddlewaretoken:this.csrfToken}).then(({ok:e,data:t})=>{e&&t.success?i(t):n(t)})}smartidStatus(){return new Promise((e,t)=>{this.checkStatus(this.smartIdUrl,e,t)})}getError(e){return this.idCardManager.getError(e)}},Languages:{ET:"EST",EN:"ENG",RU:"RUS",LT:"LIT"}};t.default=o}]).default}));