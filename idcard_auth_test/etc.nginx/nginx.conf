user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
  worker_connections 768;
}

http {
  # some HTTP boilerplate
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  server_tokens off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  gzip on;

  server {
    # Default server
    listen 443 ssl;
    server_name 127.0.0.1.xip.io;

    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

    # Localhost ssl certificates
    ssl_certificate /etc/nginx/ssl/cert.crt;
    ssl_certificate_key /etc/nginx/ssl/cert.key;

    location / {
      add_header Access-Control-Allow-Origin 'https://auth.127.0.0.1.xip.io:8443' always;

      include /etc/nginx/proxy_params;

      proxy_pass          http://django;
    }
  }

  server {
    # Authentication-savvy server
    listen 443 ssl;
    server_name auth.127.0.0.1.xip.io;

    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

    # Localhost ssl certificates
    ssl_certificate /etc/nginx/ssl/cert.crt;
    ssl_certificate_key /etc/nginx/ssl/cert.key;

    # client certificate
    ssl_client_certificate /etc/nginx/esteid_certs/id.crt;
    # make verification optional, so we can display a 403 message to those
    # who fail authentication
    ssl_verify_client optional;
    ssl_verify_depth 3;
    ssl_session_cache off;

    error_page 403 /errors/403.html;
    error_page 500 502 503 504 /errors/502.html;

    location /errors {
      root /etc/nginx;
    }

    location / {
      add_header Content-Security-Policy 'frame-ancestors https://127.0.0.1.xip.io:8443' always;
      add_header Access-Control-Allow-Origin 'https://127.0.0.1.xip.io:8443' always;

      # if the client-side certificate failed to authenticate, display an error page (with some JS in the iframe)
      if ($ssl_client_verify != SUCCESS) {
        return 403;
      }

      include /etc/nginx/proxy_params;
      proxy_set_header X-Client $ssl_client_s_dn;
      proxy_set_header X-Issuer $ssl_client_i_dn;
      proxy_set_header X-Client-Cert $ssl_client_cert;

      proxy_pass          http://django;
    }
  }
}
